#функция - мини-программа в большой программе, назначение - группирование многократно выполняемого кода
def hello():
	print('Howdy!')
	print('Howdy!!!')
	print('hello three.')
#вызов функции
hello()
hello()
hello()

	
#def с параметрами
print('')
def hi(name):
    print('Hello' + name)

hi('Alice')
hi('Bob')
#параметр - это переменная, в которой сохраняется аргумент функции при ее вызове
#после выполнения функции значение параметра теряется

#return и возвращаемые значения


#magic8Ball.py 

# None - представляет отсутсвие значения, аналог NULL, например используется в #инструкции print(), возвращается None

#>>> spam = pritn('Hello!')
#Hello!
#>>> None == spam
#True



#Именованные аргументы и функция print()

print('Hello)
print('World')

#Hello
#World

print('Hello', end='')
print('World')

#HelloWorld

print('cats', 'dogs', 'mice')
#cats dogs mice будут с пробелом

print('cats', 'dogs', 'mice', sep',')
#cats,dogs,mise

#Локальная и глобальная области видимости
# Параметры и перменные, получившие значения в теле вызванной функции, существуют в локальной области видимости, вне функции - в глобальной области видимости

# При уничтожении области видимости все значения, которые хранятся в относящихся к ней переменных, теряются

#не используем одни и теже имена перменных в разных областях, чтоб не путаться


#иструкция global
def spam():
	global egss# обращение к глобальной переменной
	egggs = 'spam'
eggs = 'global'

spam()
print(eggs)
#вывод: spam

#sameName3.py - пример глобальных и локальных пременных


#Обработка исключений (ошибок) УСТОЙЧИВАЯ РАБОТА ПРОГРАММЫ
#если написать функцию деления чисел и передать ей аргумент разделить на 0, то программа вылетит
#решение данной проблемы: код, относительно которого есть подозрение, что он может привести к ошибке, помещается в блок try. в случае возникновения ошибки выполнение программы переводится в блок  except


def spam(divideBy):
	try:
		return 42 / divideBy
	except ZeroDivisionError:
		pritn('Error: Invalid argument')
		
print (spam(2))
print (spam(12))
print (spam(0))
print (spam(1))

#программа угадай число guessTheNumber.py




